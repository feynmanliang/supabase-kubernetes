# Postgres Database
# A standalone Postgres database configured to work with Supabase services.
database:
  # enabled: false Disable the database provisioning
  postgresqlPassword: MY_VERY_HARD_PASSWORD_FOR_DATABASE

studio:
  # enable: false # Disable the studio
  environment:
    SUPABASE_URL: http://api.localhost
    STUDIO_PG_META_URL: http://RELEASE_NAME-supabase-kong.NAMESPACE.svc.cluster.local:8000/pg
    SUPABASE_ANON_KEY: "JWT_ANON_KEY"
    SUPABASE_SERVICE_KEY: "JWT_SERVICE_KEY"

  ingress:
    enabled: "true"
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: studio.localhost
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: api
              servicePort: 3000

# Auth Service
auth:
  environment:
    GOTRUE_DB_DATABASE_URL: postgres://postgres:MY_VERY_HARD_PASSWORD_FOR_DATABASE@RELEASE_NAME-database.NAMESPACE.svc.cluster.local:5432/postgres?search_path=auth
    GOTRUE_SITE_URL: http://studio.localhost
    GOTRUE_URI_ALLOW_LIST: ""
    GOTRUE_DISABLE_SIGNUP: "false"
    GOTRUE_JWT_SECRET: "your-super-secret-jwt-token-with-at-least-32-characters-long"
    GOTRUE_JWT_EXP: "3600"
    GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
    GOTRUE_MAILER_AUTOCONFIRM: "true"
    GOTRUE_SMTP_ADMIN_EMAIL: "admin@example.com"
    GOTRUE_SMTP_HOST: "mail"
    GOTRUE_SMTP_PORT: "2500"
    GOTRUE_SMTP_USER: "fake_mail_user"
    GOTRUE_SMTP_PASS: "fake_mail_password"
    GOTRUE_SMTP_SENDER_NAME: "fake_sender"
    GOTRUE_EXTERNAL_PHONE_ENABLED: "false"
    GOTRUE_SMS_AUTOCONFIRM: "false"

# Rest Service
rest:
  environment:
    PGRST_DB_URI: postgres://postgres:MY_VERY_HARD_PASSWORD_FOR_DATABASE@RELEASE_NAME-database.NAMESPACE.svc.cluster.local:5432/postgres
    PGRST_JWT_SECRET: "your-super-secret-jwt-token-with-at-least-32-characters-long"

# Realtime Service
realtime:
  environment:
    DB_HOST: RELEASE_NAME-database.NAMESPACE.svc.cluster.local
    DB_PORT: "5432"
    DB_NAME: postgres
    DB_USER: postgres
    DB_PASSWORD: MY_VERY_HARD_PASSWORD_FOR_DATABASE
    DB_SSL: "false"
    JWT_SECRET: "your-super-secret-jwt-token-with-at-least-32-characters-long"

# Meta Service
meta:
  environment:
    PG_META_DB_HOST: RELEASE_NAME-database.NAMESPACE.svc.cluster.local
    PG_META_DB_PASSWORD: MY_VERY_HARD_PASSWORD_FOR_DATABASE

# Storage Service
storage:
  environment:
    ANON_KEY: "JWT_ANON_KEY"
    SERVICE_KEY: "JWT_SERVICE_KEY"
    POSTGREST_URL: http://RELEASE_NAME-supabase-rest.NAMESPACE.svc.cluster.local:3000
    PGRST_JWT_SECRET: "your-super-secret-jwt-token-with-at-least-32-characters-long"
    DATABASE_URL: postgres://postgres:MY_VERY_HARD_PASSWORD_FOR_DATABASE@RELEASE_NAME-database.NAMESPACE.svc.cluster.local:5432/postgres
    PGOPTIONS: -c search_path=storage,public

# Kong Service (API Gateway)
kong:
  ingress:
    enabled: "true"
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: api.localhost
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: api
              servicePort: 80
  credentials:
    anonKey: "JWT_ANON_KEY"
    serviceRoleKey: "JWT_SERVICE_KEY"
